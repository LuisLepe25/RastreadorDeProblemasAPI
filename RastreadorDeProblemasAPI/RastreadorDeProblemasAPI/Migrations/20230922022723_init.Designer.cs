// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RastreadorDeProblemasAPI.Models.dbModels;

#nullable disable

namespace RastreadorDeProblemasAPI.Migrations
{
    [DbContext(typeof(RastreadorProblemasContext))]
    [Migration("20230922022723_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Modern_Spanish_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RastreadorDeProblemasAPI.Models.dbModels.Problema", b =>
                {
                    b.Property<int>("IdProblema")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProblema");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProblema"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("IdProblemaEstatus")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioAsignado")
                        .HasColumnType("int");

                    b.Property<long>("IdentificadorAlumno")
                        .HasColumnType("bigint");

                    b.HasKey("IdProblema");

                    b.HasIndex("IdProblemaEstatus");

                    b.HasIndex("IdUsuarioAsignado");

                    b.ToTable("Problema");
                });

            modelBuilder.Entity("RastreadorDeProblemasAPI.Models.dbModels.ProblemaEstatus", b =>
                {
                    b.Property<int>("IdProblemaEstatus")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SeveridadColor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdProblemaEstatus");

                    b.ToTable("ProblemaEstatus");
                });

            modelBuilder.Entity("RastreadorDeProblemasAPI.Models.dbModels.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("RastreadorDeProblemasAPI.Models.dbModels.Problema", b =>
                {
                    b.HasOne("RastreadorDeProblemasAPI.Models.dbModels.ProblemaEstatus", "IdProblemaEstatusNavigation")
                        .WithMany("Problemas")
                        .HasForeignKey("IdProblemaEstatus")
                        .IsRequired()
                        .HasConstraintName("FK_Problema_ProblemaEstatus");

                    b.HasOne("RastreadorDeProblemasAPI.Models.dbModels.Usuario", "IdUsuarioAsignadoNavigation")
                        .WithMany("Problemas")
                        .HasForeignKey("IdUsuarioAsignado")
                        .IsRequired()
                        .HasConstraintName("FK_Problema_Usuario");

                    b.Navigation("IdProblemaEstatusNavigation");

                    b.Navigation("IdUsuarioAsignadoNavigation");
                });

            modelBuilder.Entity("RastreadorDeProblemasAPI.Models.dbModels.ProblemaEstatus", b =>
                {
                    b.Navigation("Problemas");
                });

            modelBuilder.Entity("RastreadorDeProblemasAPI.Models.dbModels.Usuario", b =>
                {
                    b.Navigation("Problemas");
                });
#pragma warning restore 612, 618
        }
    }
}
